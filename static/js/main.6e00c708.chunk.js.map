{"version":3,"sources":["components/avatar.tsx","components/header.tsx","components/footer.tsx","components/left.tsx","components/timeline.tsx","components/pageOne.tsx","components/pageTwo.tsx","components/content.tsx","components/print.tsx","static/vi.svg","static/en.svg","components/toolbar.tsx","app/App.tsx","service/request.ts","reportWebVitals.ts","index.tsx"],"names":["Avatar","props","src","className","alt","Header","cv","print","contact","avatar","name","job","position","desc","Footer","page","setPage","onClick","id","Date","getFullYear","Left","klassName","slogan","address","map","info","i","icon","link","href","target","rel","socials","social","Object","values","entity","skills","keys","value","style","width","languages","evaluation","Timeline","items","item","time","company","title","source","online","projects","reverse","wp","description","length","text","paddingLeft","PageOne","educations","education","j","works","pageTwo","skillsDesc","skill","Content","p","Print","Toolbar","language","doPrint","setLanguage","en","vi","jsonUri","window","__URL__","App","defaultProfile","create","TopCV","useState","setPrint","profile","setProfile","viMessage","languageMessage","setLanguageMessage","setCv","onafterprint","event","useEffect","url","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","e","code","type","message","open","send","then","catch","enMessage","messages","locale","defaultLocale","lang","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e00c708.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PropProperties\n{\n    src: string;\n}\n\nconst Avatar: React.FC<PropProperties> = ( props: PropProperties ) =>\n{\n    const { src } = props;\n\n    return (\n        <figure className=\"avatar\">\n            <img className=\"img-fluid\" src={ src } alt=\"user avatar\" />\n        </figure>\n    );\n};\n\nexport default Avatar;","import React from 'react';\nimport Avatar from './avatar'\n\ninterface PropProperties {\n    cv: any;\n    print: boolean\n}\n\nconst Header: React.FC<PropProperties> = (props: PropProperties) => {\n\n    const { cv, print } = props;\n\n    return (\n        <>\n            {\n                print ?\n                    <header className=\"vc--resume-header col-12\">\n                        <div className=\"row\">\n                            {\n                                cv.contact ?\n                                    <>\n                                        <div className=\"contact-info col-4\">\n                                            {\n                                                cv.contact.avatar ?\n                                                    <Avatar src={cv.contact.avatar} />\n                                                    : ''\n                                            }\n                                        </div>\n                                        <section className=\"title col-8\">\n                                            {\n                                                cv.contact.name ?\n                                                    <div className=\"user-name\">\n                                                        {cv.contact.name}\n                                                    </div>\n                                                    : ''\n                                            }\n                                            {\n                                                cv.job.position.desc ?\n                                                    <div className=\"job-title\">\n                                                        {cv.job.position.desc}\n                                                    </div>\n                                                    : ''\n                                            }\n                                        </section>\n                                    </>\n                                    : \"\"\n                            }\n                        </div>\n\n                    </header>\n                    : \"\"\n            }\n        </>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\ninterface PropProperties {\n    page: number;\n    print: boolean,\n    setPage: (page: number) => void\n}\n\nconst Footer: React.FC<PropProperties> = (props: PropProperties) => {\n\n    const { page, print, setPage } = props;\n\n    return (\n        <>\n            {\n                !print ?\n                    <footer className=\"vc--resume-main-footer col-12\">\n                        <div className=\"row\">\n                            <span className={`col-4 text-left ${page === 2 ? 'invisible' : ''}`}\n                                onClick={() => setPage(1)}><FormattedMessage id=\"prev\" /></span>\n                            <span className=\"col-4 text-center invisible\">&copy;{(new Date()).getFullYear()} Me</span>\n                            <span className={`col-4 text-right ${page === 1 ? 'invisible' : ''}`}\n                                onClick={() => setPage(2)}><FormattedMessage id=\"next\" /></span>\n                        </div >\n                    </footer >\n                    : \"\"\n            }\n        </>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Avatar from './avatar'\n\ninterface PropProperties {\n    cv: any;\n    klassName?: string\n}\n\nconst Left: React.FC<PropProperties> = (props: PropProperties) => {\n\n    const { cv, klassName } = props;\n\n    return (\n        <div className=\"left\">\n            <div className={`info header ${klassName}`}>\n                <Avatar src={cv?.contact?.avatar} />\n                <div className=\"user-name\">\n                    {cv?.contact?.name}\n                </div>\n                <div className=\"slogan\">{cv.slogan}</div>\n            </div>\n            <div className=\"info\">\n                <div className=\"tag\">\n                    <FormattedMessage id=\"personal_info\" />\n                </div>\n                <address className=\"contact\">\n                    <ul>\n                        {\n                            cv.contact && cv.contact.address && cv.contact.address.map((info: any, i: number) => (\n                                <li key={`contact--address--${i}`}>\n                                    <i className={info.icon}></i>&nbsp;\n                                    {\n                                        info.link ?\n                                            <a href={info.link} target=\"_blank\" rel=\"noreferrer\">{info.desc}</a>\n                                            :\n                                            <span>{info.desc}</span>\n                                    }\n                                </li>\n                            ))\n                        }\n                    </ul>\n                    <ul>\n                        {\n                            cv.socials && cv.socials.map((social: any, i: number) => (\n                                <li key={`social---${i}`}>\n                                    <i className={social.icon}></i>&nbsp;\n                                    {\n                                        social.link ?\n                                            <a href={social.link}>{social.desc}</a>\n                                            :\n                                            <span>{social.desc}</span>\n                                    }\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </address>\n            </div>\n\n            <div className=\"info\">\n                <div className=\"tag\"><FormattedMessage id=\"job\" /></div>\n                <ul className=\"job-intent\">\n\n                    {\n                        cv.job && Object.values(cv.job).map((entity: any, i: number) => (\n                            <li key={`job--${i}`}>{entity.name}: {entity.desc}</li>\n                        ))\n                    }\n                </ul>\n            </div >\n            <div className=\"info\">\n                <div className=\"tag\"><FormattedMessage id=\"skills\" /></div>\n                <ul className=\"skills\">\n                    {\n                        cv.skills && Object.keys(cv.skills).map((value: any, i: number) => (\n                            <li key={`skills--${i}`}>\n                                <span className=\"skill-name\">{value}</span>\n                                <div className=\"skill-bar-wrap\">\n                                    <div className=\"skill-bar\" style={{ width: cv.skills[value] + '%' }}></div>\n                                </div>\n                            </li>\n                        ))\n                    }\n                </ul >\n            </div >\n            <div className=\"info\">\n                <div className=\"tag\"><FormattedMessage id=\"languages\" /></div>\n                <ul className=\"skills\">\n                    {\n                        cv.languages && Object.keys(cv.languages).map((value: any, i: number) => (\n                            <li key={`languages--${i}`}>\n                                <span className=\"skill-name\">{value}</span>\n                                <div className=\"skill-bar-wrap\">\n                                    <div className=\"skill-bar\" style={{ width: cv.languages[value] + '%' }}></div>\n                                </div>\n                            </li>\n                        ))\n                    }\n\n                </ul >\n            </div >\n\n            <div className=\"info bottom\">\n                <div className=\"tag\"><FormattedMessage id=\"evaluation\" /></div>\n                <p className=\"self-evaluation\">\n                    {cv.evaluation}\n                </p>\n            </div>\n        </div >\n    );\n}\n\nexport default Left;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\ninterface Project {\n  name: string,\n  description: string[]\n}\n\ninterface ProjectDesc {\n  link: string,\n  title: string,\n  text: string\n}\n\ninterface Item {\n  time: string,\n  title: string,\n  name?: string,\n  company?: string,\n  source: string,\n  online: string,\n  projects: Project[],\n  description?: string[] | ProjectDesc[],\n}\n\ninterface PropProperties {\n  items: Item[];\n  print: boolean,\n  page: number\n}\n\nconst Timeline: React.FC<PropProperties> = (props: PropProperties) => {\n\n  const { items, page, print } = props;\n\n  return (\n    <div className=\"timeline\">\n      {\n        items && items.map((item: any, i: any) => (\n          <div className=\"timeline-item\" key={`timeline--wrapper--${i}`}>\n            <div className=\"timeline-item-time\">{item.time}</div>\n            <div className=\"timeline-item-project\">\n              <div className=\"circle\"></div>\n              <div className=\"project-info\">\n                <span className=\"project-name\">{item.company || item.name}</span>\n                <span className=\"work-title\">{item.title}</span>\n                <span className=\"project-time\">{item.time}</span>\n                <span className=\"project-link\">{item.source}</span>\n                <a className=\"project-code\" href={item.source} target=\"_blank\" rel=\"noreferrer\">\n                  <i className=\"fa fa-link\"></i>&nbsp;\n                  {\n                    print ? item.source : <FormattedMessage id=\"source\" />\n                  }\n                </a>\n                <a className=\"project-code\" href={item.online} target=\"_blank\" rel=\"noreferrer\">\n                  <i className=\"fa fa-link\"></i>&nbsp;\n                  {\n                    print ? item.online : <FormattedMessage id=\"online\" />\n                  }\n                </a>\n              </div>\n              {\n                page === 1 ?\n                  <ul className=\"work-project-list\">\n                    {\n                      item.projects && item.projects.reverse().map((wp: any, i: any) => (\n                        <li key={`project----${i}`}>\n                          <h4>{wp.name}</h4>\n                          {\n                            wp.description.length ?\n                              <ul className=\"project-desc\">\n                                {\n                                  wp.description && wp.description.map((desc: any, i: any) => (\n                                    <li key={`wp--description--${i}`}>\n                                      <i className=\"fa fa-certificate\"></i>&nbsp;{ desc}\n                                    </li>\n                                  ))\n                                }\n                              </ul>\n                              : \"\"\n                          }\n\n                        </li>\n                      ))\n                    }\n                  </ul>\n                  :\n                  <ul className=\"project-desc\">\n                    {\n                      item.description && item.description.map((desc: any, i: any) => (\n                        <li key={`item--description--${i}`}>\n                          <i className=\"fa fa-certificate\"></i>\n                          {\n                            typeof desc === 'object' ?\n                              <span>\n                                <span className=\"other-text\">{desc.title}--{desc.text}</span>\n                                <a className=\"project-code\" href={desc.link} target=\"_blank\" rel=\"noreferrer\">\n                                  <i className=\"fa fa-link\"></i>&nbsp;\n                                      {\n                                    print ? desc.link : <FormattedMessage id=\"source\" />\n                                  }\n                                </a>\n                              </span>\n                              :\n                              <span style={{ paddingLeft: '5px' }}>{desc}</span>\n                          }\n                        </li>\n                      ))\n                    }\n                  </ul>\n              }\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default Timeline;\n","import React from 'react';\nimport Left from './left';\nimport Timeline from './timeline'\nimport { FormattedMessage } from 'react-intl';\n\nexport interface PropProperties {\n    cv: any,\n    print: boolean,\n    setPage: (p: number) => void,\n}\n\nconst PageOne: React.FC<PropProperties> = (props: PropProperties) => {\n\n    const { cv, setPage, print } = props;\n\n    return (\n        <article className=\"active\" onClick={() => setPage(1)}>\n            <div className=\"row\">\n                {\n                    !print ?\n                        <div className=\"col-3\">\n                            <Left klassName=\"col-md-3-3\" cv={cv} />\n                        </div>\n                        : ''\n                }\n\n                <div className={`right ${print ? 'col-12 ml-4' : 'col-9'}`}>\n                    {\n                        print ?\n                            <section className=\"personal\">\n                                <div className=\"title-wrap\">\n                                    <i className=\"fa fa-user\"></i>\n                                    <span><FormattedMessage id=\"personal_info\" /></span>\n                                </div>\n                                <div className=\"content\">\n                                    {\n                                        print && cv.contact && cv.contact.address ?\n                                            <div>\n                                                {\n                                                    cv.contact.address.map((info: any, i: number) => (\n                                                        <div className=\"information\" key={`contact-address--${i}`}>\n                                                            <span>\n                                                                <i className={info.icon}></i>&nbsp;\n                                                            {\n                                                                    info.link ?\n                                                                        <a href={info.link} target=\"_blank\" rel=\"noreferrer\">{info.desc}</a>\n                                                                        :\n                                                                        <span>{info.desc}</span>\n                                                                }\n                                                            </span>\n                                                        </div>\n                                                    ))\n                                                }\n\n                                            </div>\n                                            : \"\"\n                                    }\n                                    <div>\n                                        {\n                                            print && cv.socials && cv.socials.map((social: any, i: number) => (\n                                                <div className=\"information\" key={`social--${i}`}>\n                                                    {\n                                                        social.link ?\n                                                            <span>\n                                                                <i className={social.icon}></i>&nbsp;\n                                                        <a href={social.link} target=\"_blank\" rel=\"noreferrer\">{social.desc}</a>\n                                                            </span>\n                                                            :\n                                                            <span>{social.desc}</span>\n                                                    }\n                                                </div>\n                                            ))\n                                        }\n                                    </div>\n                                </div>\n                            </section>\n                            : \"\"\n                    }\n                    {\n                        cv.educations ?\n                            <section className=\"education\">\n                                <div className=\"title-wrap\">\n                                    <i className=\"fa fa-book\"></i>\n                                    <span><FormattedMessage id=\"educations\" /></span>\n                                </div>\n                                <div className=\"mt-3 ml-4\">\n                                    {\n                                        cv.educations.map((education: any, i: number) => (\n\n                                            Object.values(education).map((value: any, j: number) => (\n                                                <span key={`educations----${i}-${j}`}>{value}&nbsp;</span>\n                                            ))\n                                        ))\n                                    }\n                                </div>\n                            </section>\n                            : \"\"\n                    }\n                    {\n                        cv.works ?\n                            <section className=\"works\">\n                                <div className=\"title-wrap\">\n                                    <i className=\"fa fa-briefcase\"></i>\n                                    <span><FormattedMessage id=\"works\" /></span>\n                                </div>\n                                <div className=\"content\">\n                                    <Timeline items={cv.works} page={1} print={print} />\n                                </div>\n                            </section>\n                            : \"\"\n                    }\n                </div>\n            </div>\n        </article >\n    );\n}\n\nexport default PageOne;\n","import React from 'react';\nimport Left from './left'\nimport Timeline from './timeline'\nimport { FormattedMessage } from 'react-intl';\n\ninterface PropProperties {\n    cv: any;\n    print: boolean,\n    setPage: (p: number) => void,\n}\n\nconst pageTwo: React.FC<PropProperties> = (props: PropProperties) => {\n\n    const { cv, setPage, print } = props;\n\n    return (\n        <article className=\"active\" onClick={() => setPage(2)}>\n            <div className=\"row\">\n                {\n                    !print ?\n                        <div className=\"col-3\">\n                            <Left klassName=\"col-md-3-3\" cv={cv} />\n                        </div>\n                        : ''\n                }\n                <div className={`right ${print ? 'col-12 ml-4' : 'col-9'}`}>\n                    {\n                        cv.projects ?\n                            <section className=\"projects\">\n                                <div className=\"title-wrap\">\n                                    <i className=\"fa fa-file-text\"></i>\n                                    <span><FormattedMessage id=\"projects\" /></span>\n                                </div>\n                                <div className=\"content\">\n                                    <Timeline items={cv.projects} page={2} print={print} />\n                                </div>\n                            </section>\n                            : \"\"\n                    }\n                    {\n                        cv.skillsDesc ?\n                            <section className=\"skill-desc\">\n                                <div className=\"title-wrap\">\n                                    <i className=\"fa fa-wrench\"></i>\n                                    <span><FormattedMessage id=\"skills\" /></span>\n                                </div>\n                                <div className=\"content\">\n                                    <ul className=\"skill-desc\">\n                                        {\n                                            cv.skillsDesc && cv.skillsDesc.map((skill: any, i: any) => (\n                                                <li key={`skill--desc-${i}`}>\n                                                    <i className=\"fa fa-certificate\"></i>&nbsp;{ skill}\n                                                </li>\n                                            ))\n                                        }\n                                    </ul>\n                                </div>\n                            </section>\n                            : \"\"\n                    }\n                </div>\n            </div>\n        </article>\n    );\n}\n\nexport default pageTwo;\n","import React from 'react';\nimport Header from './header'\nimport Footer from './footer'\nimport PageOne from './pageOne'\nimport PageTwo from './pageTwo'\n\ninterface PropProperties {\n    cv: any;\n    page: number,\n    print: boolean,\n    setPage: (page: number) => void\n}\n\nconst Content: React.FC<PropProperties> = (props: PropProperties) => {\n\n    const { cv, page, print, setPage } = props;\n\n    return (\n        <main className=\"vc--resume-content row\">\n            <Header cv={cv} print={print} />\n            {\n                page === 1 ?\n                    <PageOne cv={cv} setPage={() => setPage(1)} print={print} />\n                    :\n                    <PageTwo cv={cv} setPage={() => setPage(2)} print={print} />\n            }\n            <Footer page={page} setPage={(p) => setPage(p)} print={print} />\n        </main >\n    );\n}\n\nexport default Content;\n","import React from 'react';\nimport Header from './header'\nimport Footer from './footer'\nimport PageOne from './pageOne'\nimport PageTwo from './pageTwo'\n\ninterface PropProperties {\n    cv: any;\n    print: boolean,\n    page: number,\n    setPage: (p: number) => void\n}\n\nconst Print: React.FC<PropProperties> = (props: PropProperties) => {\n\n    const { cv, print, page, setPage } = props;\n\n    return (\n        <main className=\"vc--resume-content row\">\n            <Header cv={cv} print={print} />\n\n            <PageOne cv={cv} setPage={() => { }} print={print} />\n            <PageTwo cv={cv} setPage={() => { }} print={print} />\n\n            <Footer page={page} setPage={(p) => setPage(p)} print={print} />\n        </main >\n    );\n}\n\nexport default Print;\n","export default __webpack_public_path__ + \"static/media/vi.db6e0bf9.svg\";","export default __webpack_public_path__ + \"static/media/en.80107797.svg\";","import React from 'react';\nimport vi from '../static/vi.svg';\nimport en from '../static/en.svg';\n\ninterface PropProperties {\n    print: boolean;\n    language: string,\n    page: number,\n    setPage: (page: number) => void,\n    doPrint: (event: any) => void,\n    setLanguage: (language: string) => void,\n}\n\nconst Toolbar: React.FC<PropProperties> = (props: PropProperties) => {\n\n    const { print, language, page, setPage, doPrint, setLanguage } = props;\n\n    return (\n        <>\n            { !print ?\n                <aside className=\"vc--toolbar\">\n                    <ul>\n                        <li>\n                            <span className=\"cursor p-3 d-block\" onClick={doPrint}><i className=\"fa fa-print\"></i>&nbsp;</span>\n                        </li>\n                        <li onClick={() => setLanguage(language === 'vi' ? 'en' : 'vi')}>\n                            <span className=\"cursor p-3 d-block\">\n                                <img className=\"img-thumbnail vc--resume-flag\" src={language === 'vi' ? en : vi} alt=\"\" />\n                            </span>\n                        </li>\n                        <li>\n                            {\n                                page === 2 ?\n                                    <span className=\"cursor p-3 d-block\"\n                                        onClick={() => setPage(1)}><i className=\"fas fa-backward\"></i></span>\n                                    :\n                                    <span className=\"cursor p-3 d-block\"\n                                        onClick={() => setPage(2)}><i className=\"fas fa-forward\"></i></span>\n                            }\n                        </li>\n                    </ul>\n                </aside>\n                : \"\"\n            }\n        </>\n    );\n}\n\nexport default Toolbar;\n","import React, { useEffect, useState } from 'react';\nimport { IntlProvider } from 'react-intl'\nimport viMessage from './../lang/vi.json';\nimport enMessage from './../lang/en.json';\nimport { request } from './../service/request'\nimport Content from './../components/content'\nimport Print from './../components/print'\nimport Toolbar from './../components/toolbar'\nimport TopCV from './../static/resume.json'\n\nconst jsonUri = (window as any).__URL__ || null;\n\nconst App: React.FC = () => {\n\n  const defaultProfile = Object.create(TopCV);\n\n  const [print, setPrint] = useState(false);\n  const [language, setLanguage] = useState('vi');\n  const [profile, setProfile] = useState(defaultProfile);\n  const [page, setPage] = useState(1);\n  const [languageMessage, setLanguageMessage] = useState(viMessage);\n  const [cv, setCv] = useState(defaultProfile.vi);\n  //listen on end print event\n  (window as any).onafterprint = (event: any) => { setPrint(false) };\n\n  //mount\n  useEffect(() => {\n    if (jsonUri) {\n      request(jsonUri)\n        .then((profile) => {\n          if (profile) {\n            setProfile(profile);\n          }\n        })\n        .catch((e) => {\n\n        })\n    }\n  }, []);\n\n  //change language\n  useEffect(() => {\n    setLanguageMessage(language === 'vi' ? viMessage : enMessage);\n  }, [language]);\n\n  //change profile by language\n  useEffect(() => {\n    setCv((profile && profile[language]) ? profile[language] : defaultProfile.vi);\n  }, [profile, language, defaultProfile]);\n\n  //print effect\n  useEffect(() => {\n    if (print) {\n      (window as any).print();\n    }\n  }, [print])\n\n  return (\n    <IntlProvider messages={languageMessage} locale={language} defaultLocale=\"vi\">\n      <div className=\"vc--resume\">\n        <div className=\"row\">\n          <div className=\"vc--resume col-12\">\n            <>\n              {\n                print ?\n                  <Print cv={cv} page={page} print={print} setPage={(p) => setPage(p)} />\n                  :\n                  <Content cv={cv} page={page} print={print} setPage={(p) => setPage(p)} />\n              }\n            </>\n          </div>\n          <Toolbar print={print}\n            page={page}\n            setPage={(page) => setPage(page)}\n            language={language}\n            doPrint={(event: any) => { setPrint(true) }}\n            setLanguage={(lang) => setLanguage(lang)}\n          />\n        </div>\n      </div >\n    </IntlProvider>\n  );\n}\n\nexport default App;\n","export const requestFetch = async (url: string) => {\n    try {\n        const response = await fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            mode: 'no-cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'include', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        });\n\n        return response.json(); // parses JSON response into native JavaScript objects\n    } catch (e) {\n        console.log(e)\n        return null;\n    }\n}\n\nexport const request = (url: string) => {\n    return new Promise((resolve, reject) => {\n        let xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    try {\n                        let response = JSON.parse(xhr.responseText);\n                        resolve(response);\n                    } catch (e) {\n                        reject({\n                            code: 500,\n                            type: 'error',\n                            message: 'Parse cv failed'\n                        });\n                    }\n                }\n                else {\n                    reject({\n                        code: 500,\n                        type: 'error',\n                        message: 'request was unsuccessful: ' + xhr.status\n                    });\n                }\n            }\n        };\n        xhr.open('GET', url, true);\n        xhr.send(null);\n    });\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}